openapi: 3.0.0
info:
  title: "GAME WIN API"
  description: "An API about game wins"
  version: "1.0.0"

servers:
  - url: "/api"

components:
  schemas:
    Person:
      type: "object"
      required:
        - fname
      properties:
        fname:
          type: "string"
        lname:
          type: "string"
    Win:
      type: "object"
      required:
        - game_id
        - person_id
      properties:
        person_id:
          type: "integer"
        game_id:
          type: "integer"
        comment:
          type: "string"
    Game:
      type: "object"
      required:
        - name
      properties:
        name:
          type: "string"
        num_players:
          type: "integer"
        play_time:
          type: "string"
        genre:
          type: "string"
  parameters:
    person_id:
      name: "person_id"
      description: "ID of the person to get"
      in: path
      required: True
      schema:
        type: "string"
    win_id:
      name: "win_id"
      description: "ID of the win"
      in: path
      required: True
      schema:
        type: "string"
    game_id:
      name: "game_id"
      description: "ID of the game"
      in: path
      required: True
      schema:
        type: "string"

paths:
  /people:
    get:
      operationId: "people.read_all"
      tags:
        - "People"
      summary: "Read the list of people"
      responses:
        "200":
          description: "Successfully read people list"
    post:
      operationId: "people.create"
      tags:
        - People
      summary: "Create a person"
      requestBody:
        description: "Person to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "person"
              $ref: "#/components/schemas/Person"
      responses:
        "201":
          description: "Successfully created person"
  /people/{person_id}:
    get:
      operationId: "people.read_one"
      tags:
        - People
      summary: "Read one person"
      parameters:
        - $ref: "#/components/parameters/person_id"
      responses:
        "200":
          description: "Successfully read person"
    put:
      tags:
        - People
      operationId: "people.update"
      summary: "Update a person"
      parameters:
        - $ref: "#/components/parameters/person_id"
      responses:
        "200":
          description: "Successfully updated person"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "person"
              $ref: "#/components/schemas/Person"
    delete:
      tags:
        - People
      operationId: "people.delete"
      summary: "Delete a person"
      parameters:
        - $ref: "#/components/parameters/person_id"
      responses:
        "204":
          description: "Successfully deleted person"
  /wins:
    get:
      operationId: "wins.read_all"
      tags:
        - "Wins"
      summary: "Read the list of wins"
      responses:
        "200":
          description: "Successfully read win list"
    post:
      operationId: "wins.create"
      tags:
        - Win
      summary: "Create a win log"
      requestBody:
        description: "Win to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "win"
              $ref: "#/components/schemas/Win"
      responses:
        "201":
          description: "Successfully created win log"
  /wins/{win_id}:
    get:
      operationId: "wins.read_one"
      tags:
        - Win
      summary: "Read last logged win"
      parameters:
        - $ref: "#/components/parameters/win_id"
      responses:
        "200":
          description: "Successfully read win"
    delete:
      tags:
        - Win
      operationId: "wins.delete"
      summary: "Delete a win log"
      parameters:
        - $ref: "#/components/parameters/win_id"
      responses:
        "204":
          description: "Successfully deleted win log"
  /games:
    get:
      operationId: "games.read_all"
      tags:
        - "Games"
      summary: "Read the list of games"
      responses:
        "200":
          description: "Successfully read game list"
    post:
      operationId: "games.create"
      tags:
        - Games
      summary: "Create a game"
      requestBody:
        description: "Game to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "game"
              $ref: "#/components/schemas/Game"
      responses:
        "201":
          description: "Successfully created game"
  /games/{game_id}:
    get:
      operationId: "games.read_one"
      tags:
        - Games
      summary: "Read one game"
      parameters:
        - $ref: "#/components/parameters/game_id"
      responses:
        "200":
          description: "Successfully read game"
    put:
      tags:
        - Games
      operationId: "games.update"
      summary: "Update a game"
      parameters:
        - $ref: "#/components/parameters/game_id"
      responses:
        "200":
          description: "Successfully updated game"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "game"
              $ref: "#/components/schemas/Game"
    delete:
      tags:
        - Games
      operationId: "games.delete"
      summary: "Delete a game"
      parameters:
        - $ref: "#/components/parameters/game_id"
      responses:
        "204":
          description: "Successfully deleted game"